# Define area of interest
bbox_string <- define_aoi(5.387200, 52.155170, 100)
# Download 3DBag data
data <- download_3dbag(bbox_string)
# Process and plot 3D data
final_coords <- process_plot_3d(data)
# Save 3D model as OBJ file
save_3d_model("buildings", final_coords)
create_vr("model/buildings.glb")
create_vr("model/buildings.glb")
create_VR("model/buildings.glb")
create_VR("model/buildings.glb")
> roxygen2::roxygenise()
roxygen2::roxygenise()
save_3D_model <- function(filename, final_coords) {
# Ensure columns are numeric vectors
final_coords$x <- as.numeric(final_coords$x)
final_coords$y <- as.numeric(final_coords$y)
final_coords$z <- as.numeric(final_coords$z)
# Plot the 3D model with all buildings combined
open3d()
triangles3d(final_coords$x, final_coords$y, final_coords$z, col = "blue")
# Save the 3D model as OBJ file using rgl
obj_file <- paste0(filename, ".obj")
writeOBJ(obj_file)
# Create an MTL file to define the material properties
mtl_file <- paste0(filename, ".mtl")
mtl_content <- "
newmtl Blue
Ka 0.0 0.0 0.0
Kd 0.0 0.0 1.0
Ks 0.0 0.0 0.0
d 1.0
illum 1
"
write(mtl_content, file = mtl_file)
# Update the OBJ file to reference the MTL file
obj_content <- readLines(obj_file)
obj_content <- c(paste0("mtllib ", basename(mtl_file)), obj_content)
writeLines(obj_content, con = obj_file)
}
roxygen2::roxygenise()
roxygen2::roxygenise()
# Define area of interest
bbox_string <- define_aoi(5.387200, 52.155170, 100)
# Define area of interest
bbox_string <- define_aoi(5.387200, 52.155170, 100)
# Process and plot 3D data
final_coords <- process_plot_3d(data)
# Save 3D model as OBJ or glb file
save_3D_model("buildings", final_coords)
create_VR("model/buildings.glb")
create_VR_prop("model/buildings.glb", x_pos = -2, z_pos = -2, scale = c(0.01, 0.01, 0.01))
create_VR_rotates("model/buildings.glb", c(0, 0.2))  # Enable rotation with a speed coefficient
create_VR_user_interactive_settings("model/city.glb", c(0, 0.2)) # Enables interactive rotation
# Save 3D model as OBJ or glb file
save_3D_model("buildings", final_coords)
Save 3D model as OBJ or glb file
Save 3D model as OBJ or glb file
create_VR("model/city.glb")
# Define area of interest
bbox_string <- define_aoi(5.387200, 52.155170, 100)
# Download 3DBag data
data <- download_3dbag(bbox_string)
# Process and plot 3D data
final_coords <- process_plot_3d(data)
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
rlang::last_trace()
roxygen2::roxygenise()
library(devtools)
document()  # Re-run to ensure documentation is up-to-date
library(RayshaderVR)
# Check if the function is available
ls("package:RayshaderVR")
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
roxygen2::roxygenise()
remove.packages("RayshaderVR")
devtools::install()
.Last.error
roxygen2::roxygenise()
roxygen2::roxygenise()
remove.packages("RayshaderVR")
roxygen2::roxygenise()
library(devtools)
document()  # Ensure documentation is up-to-date
remove.packages("RayshaderVR")
devtools::install()
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
roxygen2::roxygenise()
rlang::last_trace()
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
# Process and plot 3D data
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
# Save 3D model as OBJ or glb file
save_as_obj("building", coords)
save_3D_glb("building", coords)
# Process and plot 3D data
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
# Save 3D model as OBJ or glb file
save_as_obj("building", coords)
save_as_glb("building", coords)
# Process and plot 3D data
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
# Save 3D model as OBJ or glb file
save_as_obj("buildings", coords)
save_as_glb("buildings", coords)
create_VR("model/buildings.glb")
create_VR("buildings.glb")
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
# Save 3D model as OBJ or glb file
save_as_obj("buildings", coords)
save_as_glb("buildings", coords)
create_VR("buildings.glb")
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
# Save 3D model as OBJ or glb file
save_as_obj("buildings", coords)
save_as_glb("buildings", coords)
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
# Save 3D model as OBJ or glb file
save_as_obj("buildings", coords)
save_as_glb("buildings", coords)
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
# Save 3D model as OBJ or glb file
save_as_obj("buildings", coords)
save_as_glb("buildings", coords)
roxygen2::roxygenise()
roxygen2::roxygenise()
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(devtools)
document()  # Ensure documentation is up-to-date
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
roxygen2::roxygenise()
roxygen2::roxygenise()
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
# Save 3D model as OBJ or glb file
save_as_obj("buildings", coords)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
# Process and plot 3D data
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
# Save 3D model as OBJ or glb file
save_as_obj("buildings", coords)
save_as_glb("buildings", coords)
# Process and plot 3D data
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
# Save 3D model as OBJ or glb file
save_as_obj("buildings", coords)
save_as_glb("buildings", coords)
create_VR("buildings.glb")
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::load_all(".")
create_vr_viewer("buildings.glb", "viewer.html")
roxygen2::roxygenise()
create_VR("buildings.glb")
roxygen2::roxygenise()
roxygen2::roxygenise()
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
create_VR("city.glb")
> roxygen2::roxygenise()
roxygen2::roxygenise()
create_VR("city.glb")
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
# Define area of interest
bbox_string <- define_aoi(5.387200, 52.155170, 200)
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
# Process and plot 3D data
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 200)
# Process and plot 3D data
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 300)
# Process and plot 3D data
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
# Process and plot 3D data
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 400)
# Process and plot 3D data
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 50)
# Process and plot 3D data
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 150)
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 150)
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 150)
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 150)
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 150)
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 150)
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 150)
create_VR("buildings.glb")
create_VR("city.obj")
create_VR("city.obj", "output.html")
create_VR_prop("buildings.glb", x_pos = -2, z_pos = -2, scale = c(0.01, 0.01, 0.01))
create_VR("buildings.obj", "output.html")
create_VR("buildings.glb", "output.html")
add_rotation_to_VR("output2.html", c(1, 1))  # Enable rotation with a speed coefficient
add_rotation_to_VR("output2.html", c(1, 1))  # Enable rotation with a speed coefficient
install.packages("glue")
create_VR("buildings.glb", "output.html")
create_VR("buildings.glb", "output.html")
add_rotation_to_VR("output2.html", c(1, 1))  # Enable rotation with a speed coefficient
create_VR("buildings.glb", "output.html")
create_VR("buildings.glb", "output.html")
create_VR_prop("buildings.glb", c(-2, 0, -2),c(0.01, 0.01, 0.01),c(-5,0,10),"output2.html")
#
add_rotation_to_VR("output2.html", c(1, 1))  # Enable rotation with a speed coefficient
usethis::use_mit_license("Abide Coskun Setirek")
devtools::check()
> devtools::check()
devtools::check()
roxygen2::roxygenise()
install.packages("roxygen2")
library(roxygen2)
roxygen2::roxygenise()
roxygen2::roxygenise()
create_VR("buildings.glb", "output.html")
create_VR_prop("buildings.glb", c(-2, 0, -2),c(0.01, 0.01, 0.01),c(-5,0,10),"output2.html")
#
add_rotation_to_VR("output2.html", c(1, 1))  # Enable rotation with a speed coefficient
create_VR("buildings.glb", "output.html")
create_VR_prop("buildings.glb", c(-2, 0, -2),c(0.01, 0.01, 0.01),c(-5,0,10),"output2.html")
#
add_rotation_to_VR("output2.html", c(1, 1))  # Enable rotation with a speed coefficient
add_rotation_to_VR("output2.html", c(1, 1))  # Enable rotation with a speed coefficient
add_rotation_to_VR("output2.html", c(1, 1))  # Enable rotation with a speed coefficient
add_rotation_to_VR("output2.html", c(1, 1))  # Enable rotation with a speed coefficient
add_rotation_to_VR("output2.html", c(TRUE, 1))  # Enable rotation with a speed coefficient
#
add_rotation_to_VR("output2.html", c(TRUE, 0.2))  # Enable rotation with a speed coefficient
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 150)
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
# Save 3D model as OBJ or glb file
#save_as_obj("buildings", coords)
save_as_glb("buildings", coords)
create_VR_prop("buildings.glb", c(-2, 0, -2),c(0.01, 0.01, 0.01),c(-5,0,10),"output2.html")
#
add_rotation_to_VR("output2.html", c(TRUE, 0.2))  # Enable rotation with a speed coefficient
create_VR_prop("buildings.glb", c(-2, 0, -2),c(0.01, 0.01, 0.01),c(-5,0,10),"output2.html")
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
create_VR_prop("buildings.glb", c(-2, 0, -2),c(0.01, 0.01, 0.01),c(-5,0,10),"output2.html")
source("R/save_as_glb.R")
source("R/save_as_obj.R")
# Define area of interest
#bbox_string <- define_aoi(5.387200, 52.155170, 200)
# Download 3DBag data
#data <- get_3Dbag_items.bbox(bbox_string)
# Process and plot 3D data
#coords <- plot_3Dbag_buildings.data(data)
# Process and plot 3D data
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
# Save 3D model as OBJ or glb file
save_as_obj("buildings", coords)
install.packages("rgl")
create_VR_prop("buildings.glb", c(0, 3.5, -2),c(0.01, 0.01, 0.01),c(-50,0,0),"output2.html")
#
add_rotation_to_VR("output2.html", c(TRUE, 0.2))  # Enable rotation with a speed coefficient
create_VR("buildings.glb", "output.html",c(0, 4, -2),c(0.01, 0.01, 0.01),c(-50,0,0))
create_VR("buildings.glb", "output.html",c(0, 3.5, -2),c(0.01, 0.01, 0.01))
create_VR("my_city.obj", "output.html",c(0, 4, -2),c(0.01, 0.01, 0.01),c(-50,0,0))
create_VR("buildings.glb", "output.html",c(0, 4, -2),c(0.01, 0.01, 0.01),c(-50,0,0))
create_VR("buildings.glb", "output.html",c(0, 3, -2),c(0.01, 0.01, 0.01),c(-50,0,0))
add_environment_to_VR("output.html", "yavapai")
install.packages("rgl")
devtools::load_all(".")
devtools::document()
export(set_VR_environment)
devtools::document()
export(save_as_glb)
install.packages("rgl")
install.packages("rgl")
install.packages("roxygen2")
install.packages("devtools")
library(roxygen2)
library(devtools)
install.packages("rgl")
install.packages("roxygen2")
install.packages("devtools")
library(rgl)
library(roxygen2)
library(devtools)
yourPackageName/
├── DESCRIPTION
Package: yourPackageName
Package: yourPackageName
importFrom(rgl, open3d, triangles3d, writeOBJ)
devtools::document()
devtools::document()
devtools::load_all()
exists("save_as_glb")
devtools::build()
devtools::install()
devtools::install()
devtools::document()
devtools::clean()
devtools::clean()
devtools::build()
devtools::install()
remove.packages("yourPackageName")
remove.packages("RayshaderVR")
devtools::build()
devtools::build()
devtools::install()
exists("save_as_glb")
.rs.restartR()
install.packages("rgl")
install.packages("roxygen2")
install.packages("devtools")
library(rgl)
library(roxygen2)
library(devtools)
.rs.restartR()
install.packages("rgl")
install.packages("roxygen2")
install.packages("devtools")
install.packages("devtools")
install.packages("rgl")
library(rgl)
library(roxygen2)
library(devtools)
devtools::document()
importFrom(rgl, open3d, triangles3d, writeOBJ)
> devtools::document()
devtools::document()
devtools::document()
importFrom(rgl, open3d, triangles3d)
devtools::document()
.rs.restartR()
install.packages("rgl")
install.packages("roxygen2")
install.packages("devtools")
install.packages("roxygen2")
install.packages("devtools")
install.packages("devtools")
install.packages("rgl")
library(rgl)
library(roxygen2)
library(devtools)
devtools::document()
importFrom(rgl, open3d, triangles3d, writeOBJ)
importFrom(rgl, open3d, triangles3d, writeOBJ)
importFrom(grDevices, col2rgb, colors)
devtools::document()
devtools::build()
devtools::install()
exists("save_as_glb")
devtools::document()
devtools::document()
.rs.restartR()
install.packages("rgl")
install.packages("roxygen2")
install.packages("devtools")
install.packages("rgl")
install.packages("rgl")
install.packages("rgl")
library(rgl)
library(roxygen2)
library(devtools)
devtools::document()
devtools::document()
devtools::build()
devtools::install()
exists("save_as_glb")
exists("save_model_as_glb")
devtools::document()
devtools::document()
devtools::document()
exists("save_model_as_glb")
exists("save_model_as_obj")
mkdir -p tests/testthat
devtools::test()
.rs.restartR()
install.packages("rgl")
install.packages("roxygen2")
install.packages("devtools")
install.packages("testthat")
library(rgl)
library(roxygen2)
library(devtools)
library(testthat)
install.packages("rgl")
.rs.restartR()
detach("package:rgl", unload = TRUE)
remove.packages("rgl")
library(rgl)
install.packages("rgl")
devtools::test()
devtools::test()
library(RayshaderVR)
devtools::test()
> library(RayshaderVR)
library(RayshaderVR)
devtools::document()
> devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(RayshaderVR)
exists("save_model_as_obj")
create_VR("buildingGLB.glb", "output.html",c(0, 2.5, -3),c(0.01, 0.01, 0.01),c(-75,0,0))
.rs.restartR()
.rs.restartR()
devtools::document()
devtools::build()
devtools::install()
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
# Save 3D model as glb file
save_model_as_glb("buildingGLB", coords)
#save_model_as_glb("buildingGLB", coords, "gray")
# Create 3D model for A-frame
create_VR("buildingGLB.glb", "output.html",c(0, 2.5, -3),c(0.01, 0.01, 0.01),c(-75,0,0))
source("R/save_model_as_glb.R")
# Process and plot 3D data
coords <- plot_3Dbag_buildings(5.387200, 52.155170, 100)
# Save 3D model as glb file
save_model_as_glb("buildings", coords)
#save_model_as_glb("buildings", coords, "gray")
# Create 3D model for A-frame
create_VR("buildingGLB.glb", "output.html",c(0, 2.5, -3),c(0.01, 0.01, 0.01),c(-75,0,0))
.rs.restartR()
devtools::document()
devtools::document()
devtools::document()
rlang::last_trace()
.rs.restartR()
devtools::document()
> devtools::document()
devtools::document()
rlang::last_trace()
devtools::document()
rlang::last_trace()
> devtools::document()
devtools::document()
rlang::last_trace()
devtools::document()
rlang::last_trace()
devtools::document()
devtools::document()
devtools::document()
.rs.restartR()
devtools::document()
rlang::last_trace()
create_rayshader(5.3872, 52.15517, 100, "buildings2", "blue")
devtools::document()
devtools::document()
rlang::last_trace()
.rs.restartR()
devtools::document()
devtools::document()
rlang::last_trace()
devtools::document()
create_VR("buildings2.glb", "output2.html")
devtools::document()
devtools::document()
evtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
rlang::last_trace()
evtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
rlang::last_trace()
devtools::document()
devtools::document()
devtools::document()
rlang::last_trace()
devtools::document()
devtools::document()
devtools::document()
testthat::test_file("tests/testthat/test_define_aoi.R")
devtools::tests()
devtools::test()
devtools::document()
devtools::build()
devtools::load_all(".")
devtools::build()
devtools::document()
